[
  //* Move to the previous/next editor.
  {
    "key": "cmd+k",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "cmd+j",
    "command": "workbench.action.previousEditor"
  },

  //* Move active editor left or right (useful for full-stack web dev).
  {
    "key": "cmd+ctrl+j",
    "command": "moveActiveEditor",
    "args": {
      "to": "left"
    }
  },
  {
    "key": "cmd+ctrl+k",
    "command": "moveActiveEditor",
    "args": {
      "to": "right"
    }
  },

  //* Traverse VSCode IntelliSense suggestions with vim keybindings.
  {
    "key": "cmd+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "cmd+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },

  //* Traverse VSCode quick open options with vim keybindings.
  {
    "key": "cmd+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "cmd+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },

  //* VSCode terminal commands.
  {
    "key": "ctrl+n",
    "command": "workbench.action.terminal.newInActiveWorkspace"
  },
  {
    "key": "cmd+`",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+\\",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+down",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+up",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  
  //* Ensure that tab button works in vim.
  {
    "key": "shift+tab",
    "command": "outdent",
    "when": "editorTextFocus && !editorTabMovesFocus"
  },

  // TODO: Traverse search results with vim
  {
    "key": "cmd+enter",
    "command": "filesExplorer.openFilePreserveFocus",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "command": "workbench.files.action.focusFilesExplorer",
    "key": "cmd+e",
    "when": "editorTextFocus"
  },

  //* FILE TREE
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+e"
  },
  {
    "key": "n",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+n",
    "command": "explorer.newFolder",
    "when": "explorerViewletFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && !inputFocus"
  },

  //* Expand region extension
  {
    "key": "cmd+shift+=","command": "expand_region", "when": "editorTextFocus"
  },
  {
      "key": "cmd+shift+-","command": "undo_expand_region", "when": "editorTextFocus && editorHasSelection"
  },
  {
    "key": "cmd+n",
    "command": "extension.advancedNewFile"
  },
  {
    "key": "alt+cmd+n",
    "command": "-extension.advancedNewFile"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "alt+d",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "cmd+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "cmd+d",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+c",
    "command": "aws.AmazonQChatView.focus"
  },
  {
    "key": "shift+cmd+l",
    "command": "turboConsoleLog.displayLogMessage"
  },
  {
    "key": "ctrl+alt+l",
    "command": "-turboConsoleLog.displayLogMessage"
  },
  {
  "key": "cmd+l",
  "command": "editor.action.insertSnippet",
  "when": "editorTextFocus",
  "args": {
    "langId": "javascriptreact",
    "name": "Print to console"
  }
},
{
  "key": "ctrl+shift+j",
  "command": "workbench.action.terminal.focusPrevious",
  "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
},
{
  "key": "shift+cmd+[",
  "command": "-workbench.action.terminal.focusPrevious",
  "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
},
{
  "key": "ctrl+shift+k",
  "command": "workbench.action.terminal.focusNext",
  "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
},
{
  "key": "shift+cmd+]",
  "command": "-workbench.action.terminal.focusNext",
  "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
},
{
  "key": "cmd+t",
  "command": "-workbench.action.showAllSymbols"
},
{
  "key": "cmd+t",
  "command": "workbench.action.quickOpen"
},
{
  "key": "cmd+p",
  "command": "-workbench.action.quickOpen"
},
{
  "key": "cmd+p",
  "command": "workbench.action.showCommands"
},
{
  "key": "shift+cmd+p",
  "command": "-workbench.action.showCommands"
},
{
  "key": "cmd+e",
  "command": "-actions.findWithSelection"
},
{
  "key": "shift+cmd+g",
  "command": "workbench.view.scm",
  "when": "workbench.scm.active"
},
{
  "key": "ctrl+shift+g",
  "command": "-workbench.view.scm",
  "when": "workbench.scm.active"
},
{
  "key": "shift+cmd+g",
  "command": "workbench.view.scm",
  "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
},
{
  "key": "ctrl+shift+g",
  "command": "-workbench.view.scm",
  "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
},
{
  "key": "ctrl+shift+g",
  "command": "editor.action.previousMatchFindAction",
  "when": "editorFocus"
},
{
  "key": "shift+cmd+g",
  "command": "-editor.action.previousMatchFindAction",
  "when": "editorFocus"
},
{
  "key": "ctrl+shift+g",
  "command": "workbench.action.terminal.findPrevious",
  "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
},
{
  "key": "shift+cmd+g",
  "command": "-workbench.action.terminal.findPrevious",
  "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
},
{
  "key": "ctrl+shift+g",
  "command": "workbench.action.terminal.openDetectedLink",
  "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'"
},
{
  "key": "shift+cmd+g",
  "command": "-workbench.action.terminal.openDetectedLink",
  "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'"
}
]
