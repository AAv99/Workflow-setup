{
  "vscode_custom_css.imports": [
    "file:///Users/bhanu/.vscode/extensions/bhanu1776.jellyfish-retro-0.1.1/themes/Extras/JellyFish-x-NoAnim.css"
  ],
  "editor.fontSize": 15,
  // "editor.rulers": [{"column":48, "color": "#73676e3c"}],
  "explorer.confirmDelete": false,
  "git.autofetch": true,
  "git.enableSmartCommit": true,
  "git.confirmSync": false,
  "editor.suggest.insertMode": "replace",
  "explorer.confirmDragAndDrop": false,
  "editor.codeLensFontFamily": "'Dank Mono','Operator Mono SSm Lig','cascadia code', Consolas, 'Courier New',monospace",
  "editor.fontFamily": "'JetBrainsMono Nerd Font', 'Dank Mono', 'Fira Code','Operator Mono SSm Lig','cascadia code', Consolas, 'Courier New', monospace",
  "editor.fontWeight": "600",
  "editor.fontLigatures": true,
  "workbench.startupEditor": "none",
  "security.workspace.trust.untrustedFiles": "open",
  "extensions.supportUntrustedWorkspaces": {},
  "extensions.webWorker": true,
  "better-comments.highlightPlainText": true,
  "better-comments.multilineComments": true,
  "better-comments.tags": [
    {
      "tag": "!",
      "color": "#FF2D00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": true,
      "italic": false
    },
    {
      "tag": "?",
      "color": "#3498DB",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "//",
      "color": "#d3d3d3", // 99e0e0
      "strikethrough": true,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "todo",
      "color": "#ffff00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "*",
      "color": "#ffff00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    }
  ],


  //! Vim ðŸ”¥
  "vim.commandLineModeKeyBindings": [],
  "vim.cursorStylePerMode.normal": "underline",
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["p"],
      "commands": ["editor.action.clipboardPasteAction"]
    }
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": ["k", "j"],
      "after": ["<Esc>"]
    },
    {
      "before": ["j", "k"],
      "after": ["<Esc>"]
    }
  ],
  "vim.easymotion": true,
  "vim.foldfix": true,
  "vim.useSystemClipboard": true,
  "vim.incsearch": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.sneak": true,
  "vim.highlightedyank.color": "rgba(230, 97, 89, 0.7)",
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.textColor": "white",
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "d"],
      "after": ["d", "d"]
    },
    {
      "before": [
        "[",
        "d"
      ],
      "commands": [
        "editor.action.marker.prev"
      ]
    },
    {
      "before": [
        "]",
        "d"
      ],
      "commands": [
        "editor.action.marker.next"
      ]
    },
    {
      "before": [
        "<leader>",
        "c",
        "a"
      ],
      "commands": [
        "editor.action.quickFix"
      ]
    },
    {
      "before": [
        "leader",
        "i"
      ],
      "commands": [
        "extension.toggleBool"
      ]
    },
    {
      "before": ["<C-n>"],
      "commands": [":nohl"]
    },
    {
      "before": ["<leader>", "e"],
      "commands": ["workbench.view.explorer"]
    },
    {
      "before": ["<leader>", "f"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<leader>", "f"],
      "commands": ["workbench.files.action.focusFilesExplorer"],
      "when": "editorTextFocus"

    },
   {
      "before": ["<C-w>"],
      "after": ["workbench.action.closeActiveEditor"],
    },
    {
      "before": ["<leader>", "l"],
      "after": ["$"]
    },
    {
      "before": ["<leader>", "h"],
      "after": ["0"]
    }
  ],
  "vim.normalModeKeyBindings": [
    {
      "before": ["v", "n"],
      "after": ["v", "g", "_", "y"]
    },
    {
      // find the source definition instead of the .d.ts file
      // 'f'ind the source 'd'efinition
      "before": ["f", "d"],
      "commands": ["typescript.goToSourceDefinition"]
    },
    {
      // df is easier to hit than gd
      // go to the 'd'e'f'inition
      "before": ["d", "f"],
      "after": ["g", "d"]
    },
    {
      "before": ["d", "n"],
      "after": ["d", "g", "_"]
    },
    // Move selected lines while staying in visual mode
    { "before": ["J"], "commands": ["editor.action.moveLinesDownAction"] },
    { "before": ["K"], "commands": ["editor.action.moveLinesUpAction"] },

  ],
  "vim.leader": "<space>",
  "vim.cursorStylePerMode.replace": "block",
  "vim.statusBarColorControl": true,
  // "vim.timeout": 200,

  "workbench.colorCustomizations": {
    "editorSuggestWidget.selectedBackground": "#231739",
    "sideBar.background": "#140E1A",
    "list.activeSelectionBackground": "#231739",
    "list.inactiveSelectionBackground": "#231739",
    "list.focusBackground": "#231739",
    "list.hoverBackground": "#231739",
    "statusBar.background": "#240D37",
    "statusBar.noFolderBackground": "#240D37",
    "statusBar.debuggingBackground": "#240D37",
    "activityBar.activeBackground": "#120D18",
    "activityBar.background": "#120D18",
    "statusBar.foreground": "#ffffff",
    "statusBar.debuggingForeground": "#ffffff"
  },
  "vim.statusBarColors.insert": "#240D37",
  "vim.startInInsertMode": true,
  "vim.overrideCopy": false,

  "advancedNewFile.convenienceOptions": ["last", "current", "root"],
  "editor.suggestSelection": "first",
  "files.exclude": {
    "**/.class": true,
    "**/.classpath": true,
    "**/.exe": true,
    "**/.factorypath": true,
    "**/.gitignore": true,
    "**/.project": true,
    "**/.settings": true,
    "**/node_modules": true,
    "**/package-lock.json": true,
    // Hide js files agter running tsc.
    "**/*.js": { "when": "$(basename).ts" }
  },
  "editor.mouseWheelZoom": true,
  "files.defaultLanguage": " ${activeEditorLanguage}",
  "liveServer.settings.donotShowInfoMsg": true,
  "window.title": "${dirty}${activeEditorMedium}${separator}",
  "editor.cursorBlinking": "expand",
  "git.ignoreRebaseWarning": true,
  "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font, MesloLGS NF , Fira Code",
  "cSpell.userWords": [
    "Babblu",
    "bcoz",
    "Bhanu",
    "blocklisted",
    "Calibri",
    "carasol",
    "cashout",
    "Configurator",
    "Cooldown",
    "cpassword",
    "customisation",
    "Defination",
    "Didn",
    "Dombivli",
    "Equibox",
    "Farmacy",
    "forgotpassword",
    "Formik",
    "Freelanster",
    "Freelansters",
    "iconscout",
    "Iphune",
    "Kinde",
    "lucide",
    "Mobicare",
    "myaccount",
    "NEXTJS",
    "omnisender",
    "optin",
    "osama",
    "Parassolutions",
    "persistor",
    "Piramal",
    "pycryptodome",
    "reduxjs",
    "RESTAPI",
    "Roboto",
    "Rollno",
    "Shadcn",
    "Shaikh",
    "Signup",
    "soln",
    "sonner",
    "speciality",
    "Subarray",
    "subarrays",
    "Sunka",
    "sunkabhanu",
    "Swiper",
    "tailwindcss",
    "tanstack",
    "Toastify",
    "ttfors",
    "unicons",
    "uploadthing",
    "vercel"
  ],
  "breadcrumbs.enabled": false,
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "workbench.iconTheme": "material-icon-theme",

  // Enable this when u're working on a project with a team
  "editor.codeLens": false,
  // "terminal.integrated.gpuAcceleration": "on",
  "workbench.productIconTheme": "fluent-icons",
  "[css]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "gitlens.advanced.messages": {
    "suppressLineUncommittedWarning": true
  },
  "editor.parameterHints.enabled": false,
  // "editor.snippetSuggestions": "top",
  "emmet.showSuggestionsAsSnippets": true,
  "settingsSync.ignoredSettings": ["-emmet.extensionsPath"],
  "editor.quickSuggestions": {
    "other": "on",
    "comments": "off",
    "strings": "on"
  },
  "editor.suggest.snippetsPreventQuickSuggestions": true,
  "editor.scrollbar.scrollByPage": true,
  "editor.smoothScrolling": true,
  "editor.scrollbar.horizontal": "visible",
  "editor.scrollbar.vertical": "visible",
  "editor.scrollbar.verticalScrollbarSize": 12,
  "files.autoSave": "onFocusChange",
  "editor.suggest.showUsers": false,
  "cSpell.numSuggestions": 4,
  "editor.quickSuggestionsDelay": 100,
  "terminal.integrated.enableMultiLinePasteWarning": false,
  "workbench.sideBar.location": "right",
  "editor.overviewRulerBorder": false,
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "django-html": "html"
  },
  "javascript.updateImportsOnFileMove.enabled": "always",
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "liveServer.settings.donotVerifyTags": true,
  "editor.linkedEditing": true,
  "editor.minimap.autohide": true,
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.tabCompletion": "on",
  "editor.stickyScroll.enabled": true,
  "editor.stickyTabStops": true,
  "diffEditor.ignoreTrimWhitespace": false,
  "[javascriptreact]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "errorLens.enabledDiagnosticLevels": ["error", "warning"],
  "errorLens.enableOnDiffView": true,
  "[markdown]": {
    "editor.defaultFormatter": "yzhang.markdown-all-in-one"
  },
  "tailwindCSS.includeLanguages": {
    "javascript": "javascript",
    "html": "HTML"
  },
  "tailwindCSS.emmetCompletions": true, // remove this line if you don't use Emmet
  "editor.inlineSuggest.enabled": true,
  "color-highlight.languages": ["*"],
  "color-highlight.matchWords": true,
  "totalTypeScript.hideAllTips": false,
  "totalTypeScript.hideBasicTips": false,
  "[typescriptreact]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "typescript.format.enable": false,
  "totalTypeScript.hiddenTips": [
    "variable-type-annotation",
    "array-type",
    "basic-types",
    "typing-function-parameters",
    "any-type",
    "ts-object-type",
    "type-alias-declaration",
    "union-type",
    "undefined-keyword",
    "passing-generics-to-types",
    "record-utility-type",
    "function-return-type",
    "as-assertion",
    "non-null-expression",
    "typeof",
    "returntype-utility-type",
    "null-keyword",
    "interface-declaration",
    "tuple-type",
    "optional-object-property",
    "keyof",
    "literal-type",
    "generic-slots-in-functions",
    "partial-utility-type",
    "interface-with-generics",
    "as-const"
  ],
  "typescript.updateImportsOnFileMove.enabled": "always",
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "scope": "keyword.other.dotenv",
        "settings": {
          "foreground": "#FF000000"
        }
      }
    ]
  },
  "[dart]": {
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [80],
    "editor.selectionHighlight": false,
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.suggestSelection": "first",
    "editor.tabCompletion": "onlySnippets",
    "editor.wordBasedSuggestions": "off"
  },
  "[python]": {
    "editor.formatOnType": true
  },
  "css.lint.unknownAtRules": "ignore",
  "prettier.requireConfig": true,
  "editor.tabSize": 2,
  "eslint.format.enable": true,
  "editor.inlayHints.fontFamily": "'Fira Code'",
  "errorLens.excludeBySource": [
    "ts(18047)"
  ],
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnType": true,
  "editor.acceptSuggestionOnCommitCharacter": false,
  "emmet.triggerExpansionOnTab": true,
  "emmet.useInlineCompletions": true,
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.cursorWidth": 3,
  "terminal.integrated.cursorStyle": "line",
  "workbench.editor.empty.hint": "hidden",
  "vscode_vibrancy.type": "acrylic",
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.addMissingImports": "explicit",
    "source.organizeImports": "explicit"
  },
"eslint.validate": [
  "javascript",
  "javascriptreact",
  "typescript",
  "typescriptreact"
],
"aws.telemetry": false,
"tailwind-fold.foldStyle": "QUOTES",
"tailwind-fold.showTailwindImage": false,
"typescript.preferences.importModuleSpecifier": "non-relative",

//* Background Image VSCODE 
  "background.enabled": true,
  // "background.useFront": false,
  // "background.style": {
  //       "content": "''",
  //       "pointer-events": "none",
  //       "position": "absolute",
  //       "z-index": "99999",
  //       "width": "50%",
  //       "height": "100%",
  //       "margin-left":"65%",    // Make this 50 for shinchan
  //       // "margin-top":"15%",     // And uncomment this
  //       "background-position": "right",
  //       "background-size": "cover",
  //       "background-repeat": "no-repeat",
  //       "opacity": 0.15
  //   }
  // "background.customImages": [
  //   "https://i.imgur.com/o5FCDeV.png",        // Rajpal 
  //   "https://i.imgur.com/eoHXSbG.png",        // Shinchan
  //   "https://i.imgur.com/fXqaZOH.png",        // Raju
  //   ],
    "vim.vimrc.enable": true,
    "vim.vimrc.path": "/Users/bhanu/.vimrc",
    "terminal.external.osxExec": "Warp.app",
    "terminal.explorerKind": "external",
    "terminal.integrated.env.osx": {
      "FIG_NEW_SESSION": "1",
      "CW_NEW_SESSION": "1",
      "Q_NEW_SESSION": "1"
    },
    "editor.accessibilitySupport": "off",
    "tailwind-fold.autoFold": false,
    "extensions.ignoreRecommendations": true,
    "window.zoomLevel": 1,

    //* New stuff
    "workbench.editor.showTabs": "multiple",
    "workbench.layoutControl.enabled": false,
    "workbench.tips.enabled": false,
    "editor.minimap.renderCharacters": false,
    "editor.renderLineHighlight": "none",
    "editor.lineHeight": 2.2,
    "editor.lightbulb.enabled": "off",
    "explorer.compactFolders": false,
    "files.insertFinalNewline": true,
    "terminal.integrated.tabs.enabled": false,
    "terminal.integrated.defaultProfile.osx": "zsh",
    "terminal.integrated.lineHeight": 1.5,
    "window.titleBarStyle": "native",
    "apc.electron": {
      "titleBarStyle": "hiddenInset",
      "opacity": 0.9,
      "transparent": true,
      "vibrancy": "ultra-dark",
      "visualEffectState": "active",
    },
//     "apc.electron": {
//     "opacity": 0.95,
//     "transparent": true,
//     "backgroundColor": "#00000000",
//     "vibrancy": "ultra-dark"
// },
    "window.commandCenter": false,
    "apc.font.family": "Dank Mono",
    "apc.header": {
      "height": 40
    },
    "apc.sidebar.titlebar": {
      "height": 30,
      "fontSize": 12
    },
    "apc.listRow": {
      "lists": [
        "explorer-folders-view",
        "quick-input-list",
        "results"
      ],
      "height": 30,
  },
    "apc.stylesheet": {
    ".title-actions": "display: none !important",
    ".quick-input-widget.show-file-icons, .editor-widget.find-widget": "box-shadow: none !important",
    ".filematch .monaco-icon-label:before, .custom-list-row.results .monaco-list-row .monaco-icon-label:before": "background-position: 0 bottom !important",
    ".filematch .monaco-count-badge": "padding: 5px 6px 0 6px !important",
    ".sidebar .title-label": "padding: 0 !important",
    ".monaco-workbench .monaco-list:not(.element-focused):focus:before": "outline: none !important",
    ".sidebar": "border: none !important",
    ".monaco-editor .cursors-layer .cursor": "background-image: linear-gradient(135deg, #67D0FF 10%, #C45DFF 100%)",
    ".quick-input-list-row div": "display: flex !important; align-items: center !important",
    ".panel .composite.title": "visibility: hidden !important",
    ".title.show-file-icons .label-container .monaco-icon-label.file-icon": "padding-bottom: 6px !important",
    ".sidebar .title-label h2": "line-height: 2.8 !important",
    ".monaco-editor .scroll-decoration": "display: none !important",
    ".monaco-scrollable-element > .shadow.top": "display: none !important",
    ".monaco-workbench .part.panel.bottom .composite.title": "height: 5px !important",
    // ".split-view-view .visible": "padding-top: 5px !important",
    // ".monaco-split-view2 > .monaco-scrollable-element > .split-view-container": "background: #191521 !important",
  },
  "apc.imports": [
    "file:///Users/bhanu/.vscode/extensions/bhanu1776.jellyfish-retro-0.1.1/themes/Extras/JellyFish-x-NoAnim.css"
  ],
  "animations.CursorAnimationOptions": {
    "Color": "#C45DFF"
  },
  "console-ninja.featureSet": "Community",
  "animations.Enabled": false,
  "amazonQ.telemetry": false,
  "workbench.editor.customLabels.patterns": {
    "**/app/**/page.tsx": "${dirname} - Page",
    "**/app/**/index.tsx": "${dirname} - Index",
    "**/app/**/layout. tsx": "${dirname} - Layout",
    "**/app/**/template.tsx": "${dirname} - Template" ,
    "**/components/**/index.tsx": "${dirname} - Component",
    "**/app/**/page.jsx": "${dirname} - Page",
    "**/app/**/index.jsx": "${dirname} - Index",
    "**/app/**/layout. jsx": "${dirname} - Layout",
    "**/app/**/template.jsx": "${dirname} - Template" ,
    "**/components/**/index.jsx": "${dirname} - Component",
    "**/app/**/page.js": "${dirname} - Page",
    "**/app/**/index.js": "${dirname} - Index",
    "**/app/**/layout. js": "${dirname} - Layout",
    "**/app/**/template.js": "${dirname} - Template" ,
    "**/components/**/index.js": "${dirname} - Component",
  },
  "typescript.referencesCodeLens.enabled": true,
  "javascript.referencesCodeLens.enabled": true,
  "[typescript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "gitlens.launchpad.indicator.enabled": false,
  "explorer.confirmPasteNative": false,
  "window.newWindowDimensions": "fullscreen",
  "codeium.enableConfig": {
    "*": true
  },
  "workbench.colorTheme": "Beautiful Dracula Normal",
  "tailwind-fold.unfoldedTextOpacity": 0.6,
  "tailwind-fold.foldLengthThreshold": 60,
  "editor.pasteAs.preferences": [
    "text.updateImports"
  ],
  "terminal.integrated.fontLigatures": true,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "//": "Last update at 2/9/2025, 12:35:07 PM",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
    "ansible.cfg": "ansible.cfg, .ansible-lint, requirements.yml",
    "app.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, server.php, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "build-wrapper.log": "build-wrapper*.log, build-wrapper-dump*.json, build-wrapper-win*.exe, build-wrapper-linux*, build-wrapper-macosx*",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "Cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json, CMakeCache.txt",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "Dockerfile": "*.dockerfile, .devcontainer.*, .dockerignore, captain-definition, compose.*, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "go.work": "go.work.sum",
    "hatch.toml": ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "I*.cs": "$(capture).cs",
    "Makefile": "*.mk",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, next-i18next.config.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .nuxtrc, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "package.json": "*.code-workspace, .browserslist*, .circleci*, .commitlint*, .cspell*, .cursorrules, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .ls-lint.yml, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lock, bun.lockb, bunfig.toml, colada.options.ts, commitlint*, crowdin*, cspell*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nixpacks*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rolldown.config.*, rollup.config.*, rspack*, ruff.toml, sentry.*.config.ts, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.toml, xo.config.*, yarn*",
    "Pipfile": ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".commitlint*, .cspell*, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .flake8, .flowconfig, .isort.cfg, .jslint*, .lintstagedrc*, .ls-lint.yml, .markdownlint*, .pdm-python, .pdm.toml, .prettier*, .pylintrc, .python-version, .ruff.toml, .stylelint*, .textlint*, .xo-config*, .yamllint*, MANIFEST.in, Pipfile, Pipfile.lock, biome.json*, commitlint*, cspell*, dangerfile*, dlint.json, dprint.json*, eslint*, hatch.toml, lint-staged*, pdm.lock, phpcs.xml, poetry.lock, poetry.toml, prettier*, pyproject.toml, pyrightconfig.json, requirements*.in, requirements*.pip, requirements*.txt, ruff.toml, setup.cfg, setup.py, stylelint*, tox.ini, tslint*, uv.lock, uv.toml, xo.config.*",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README-*, README_*, RELEASE_NOTES*, ROADMAP.MD, Readme-*, Readme_*, Release_Notes*, Roadmap.md, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme-*, readme_*, release_notes*, roadmap.md, security.md, sponsors*",
    "Readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README-*, README_*, RELEASE_NOTES*, ROADMAP.MD, Readme-*, Readme_*, Release_Notes*, Roadmap.md, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme-*, readme_*, release_notes*, roadmap.md, security.md, sponsors*",
    "README*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README-*, README_*, RELEASE_NOTES*, ROADMAP.MD, Readme-*, Readme_*, Release_Notes*, Roadmap.md, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme-*, readme_*, release_notes*, roadmap.md, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, remix.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "rush.json": "*.code-workspace, .browserslist*, .circleci*, .commitlint*, .cspell*, .cursorrules, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .ls-lint.yml, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lock, bun.lockb, bunfig.toml, colada.options.ts, commitlint*, crowdin*, cspell*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nixpacks*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rolldown.config.*, rollup.config.*, rspack*, ruff.toml, sentry.*.config.ts, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.toml, xo.config.*, yarn*",
    "sanity.config.*": "sanity.cli.*, sanity.types.ts, schema.json",
    "setup.cfg": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",
    "setup.py": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.axaml": "$(capture).axaml.cs",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.db": "*.db-shm, *.db-wal",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.fs": "$(capture).fs.js, $(capture).fs.js.map, $(capture).fs.jsx, $(capture).fs.ts, $(capture).fs.tsx, $(capture).fs.rs, $(capture).fs.php, $(capture).fs.dart",
    "*.go": "$(capture)_test.go",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js, $(capture).d.ts, $(capture).js.flow",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx, $(capture).css, $(capture).module.css, $(capture).less, $(capture).module.less, $(capture).module.less.d.ts, $(capture).scss, $(capture).module.scss, $(capture).module.scss.d.ts",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.md": "$(capture).*",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.mts": "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.py": "$(capture).pyi",
    "*.razor": "$(capture).razor.cs, $(capture).razor.css, $(capture).razor.scss",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).bbl-SAVE-ERROR, $(capture).bcf, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).nav, $(capture).out, $(capture).run.xml, $(capture).snm, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx, $(capture).css, $(capture).module.css, $(capture).less, $(capture).module.less, $(capture).module.less.d.ts, $(capture).scss, $(capture).module.scss, $(capture).module.scss.d.ts, $(capture).css.ts",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.w": "$(capture).*.w, I$(capture).w",
    "*.wat": "$(capture).wasm",
    "*.xaml": "$(capture).xaml.cs"
  },
  "github.copilot.enable": {
    "*": false,
    "plaintext": false,
    "markdown": false,
    "scminput": false
  }
}
